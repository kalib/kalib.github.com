<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Marcelo Cavalcante Rocha ~]]></title>
  <link href="http://blog.marcelocavalcante.net/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://blog.marcelocavalcante.net/"/>
  <updated>2013-12-16T15:12:58-03:00</updated>
  <id>http://blog.marcelocavalcante.net/</id>
  <author>
    <name><![CDATA[Marcelo Cavalcante Rocha - Kalib]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Dica Rápida - Linux - Efeito de Texto Sendo Digitado? O pv Resolve]]></title>
    <link href="http://blog.marcelocavalcante.net/blog/2013/12/05/dica-rapida-linux-efeito-de-texto-sendo-digitado-o-pv-resolve/"/>
    <updated>2013-12-05T08:37:00-03:00</updated>
    <id>http://blog.marcelocavalcante.net/blog/2013/12/05/dica-rapida-linux-efeito-de-texto-sendo-digitado-o-pv-resolve</id>
    <content type="html"><![CDATA[<p><img class="left" src="/imgs/monitor.jpg" title="&lsquo;Texto em Monitor&rsquo;" >
<strong>C</strong>ertamente você já cansou de ver em filmes e/ou séries de TV cenas nas quais um monitor apresenta um texto que, aparentemente, está sendo digitado em tempo real. É claro que eles não possuem uma pessoa digitando aquele texto ou série de comandos no momento da gravação. Então, que tal aprender uma forma de fazer isto no Linux?</p>

<p><strong>O</strong> comando <em>pv</em> realiza perfeitamente este trabalho, podendo inclusive interagir com outros aplicativos e comandos.</p>

<p><strong>M</strong>ão na massa&hellip;</p>

<p><strong>A</strong>ntes de mais nada você precisará instalar o pv em sua distribuição. No Arch Linux, eu utilizo o pacman da forma convencional:</p>

<p><code>
 [kalib@tuxcaverna ~]$ sudo pacman -S pv
</code></p>

<p><strong>O</strong> pv está disponível nos repositórios de praticamente todas as distribuições, portanto utilize o gerenciador de pacotes de sua preferência para instalá-lo.</p>

<p><strong>A</strong> utilização é simples, bastando que você utilize algum comando que, de alguma forma, exponha algum texto na tela e em seguida redirecione esta saída para o pv. O pv possui diversos parâmetros, mas eu gosto particularmente de utilizar -qL, onde o <em>q</em> significa &ldquo;quiet&rdquo; e o <em>L</em> significa latência, em seguida insiro um valor para a latência. Vamos ao exemplo:</p>

<p><code>
 [kalib@tuxcaverna ~]$ echo "Primeiro teste com pv" | pv -qL 20
 Primeiro teste com pv
</code></p>

<p><strong>S</strong>e você digitar o mesmo comando, verá que ele irá escrever o texto na tela de forma &ldquo;automática&rdquo;: &ldquo;Primeiro teste com pv&rdquo;.</p>

<p><strong>É</strong> claro, em uma gravação de Hollywood a linha na qual o comando foi passado não deveria aparecer, no caso: <em>[kalib@tuxcaverna ~]$ echo &ldquo;Primeiro teste com pv&rdquo; | pv -qL 20</em>. Que tal inserir um <em>clear</em> antes de nosso comando para limpar a tela antes da execução desejada?</p>

<p><code>
 [kalib@tuxcaverna ~]$ clear &amp;&amp; echo "Primeiro teste com pv" | pv -qL 20
</code></p>

<p><strong>P</strong>erceba que desta vez o comando digitado não aparece na tela. A única informação que será exibida será <em>Primeiro teste com pv</em>.</p>

<p><strong>D</strong>iminuindo ou aumentando o valor da latência você diminuirá ou aumentará a velocidade de <em>digitação</em> do texto que você escolheu.</p>

<p><strong>C</strong>omo informei no início, você pode unir o pv com outros programas ou comandos. Que tal fazer com que um texto um pouco maior seja exibido?</p>

<p><strong>P</strong>ara este teste, eu criei um arquivo texto chamado <em>testepv</em>, conforme pode ser visto abaixo:</p>

<p>```
 [kalib@tuxcaverna ~]$ cat testepv</p>

<p> Não obstante, a contínua expansão de nossa atividade oferece uma interessante oportunidade para verificação de todos os recursos funcionais envolvidos.
 A prática cotidiana prova que o desenvolvimento contínuo de distintas formas de atuação nos obriga à análise de alternativas às soluções ortodoxas.
 Por conseguinte, a competitividade nas transações comerciais estende o alcance e a importância da gestão inovadora da qual fazemos parte.
```</p>

<p><strong>N</strong>este caso, o texto pode ser digitado <em>automaticamente</em> com o pv, da seguinte forma:</p>

<p><code>
 [kalib@tuxcaverna ~]$ clear &amp;&amp; cat testepv | pv -qL 20
</code></p>

<p><strong>L</strong>egal? Que tal utilizarmos algo ainda melhor? Já ouviu falar no <em>figlet</em>? É outro comando/aplicativo Linux que muitas pessoas desconhecem. Comece instalando-o em seu sistema, caso você já não o possua. O figlet <em>desenha</em> o seu texto de uma forma um pouco mais <em>enfeitada</em>, se comparado ao puro <em>cat</em> ou <em>echo</em>. Exemplo:</p>

<p>```
 [kalib@tuxcaverna ~]$ figlet &ldquo;Teste do Figlet&rdquo;</p>

<hr />

<p> |<em>   </em>|<strong>  </strong><em>| |</em> <em><strong>    </strong>| | </em><strong>   |  </strong><em>(</em>) <strong> <em>| | </em></strong>| |<em>
   | |/ _ \/ <strong>| </strong>/ _ \  / </em><code>|/ _ \  | |_  | |/ _</code> | |/ _ \ <strong>|
   | |  </strong>/_<em> \ ||  __/ | (</em>| | (<em>) | |  </em>| | | (<em>| | |  __/ |</em>
   |<em>|_<strong>||</strong></em>/_<em>___|  _</em>,<em>|___/  |</em>|   |<em>|_</em>, |<em>|___|_</em>|</p>

<pre><code>                                            |___/            
</code></pre>

<p>```</p>

<p><strong>N</strong>esse caso, vamos fazer com que o efeito <em>figlet</em> também pareça estar sendo digitado automaticamente e em tempo real:</p>

<p><code>
 [kalib@tuxcaverna ~]$ clear &amp;&amp; figlet "Teste do Figlet" | pv -qL 30
</code></p>

<p><strong>R</strong>esultado interessante, certo? Da mesma forma, o pv pode ser utilizado com diversos outros aplicativos que trazem alguma saída no terminal, como o cowsay e muitos outros. A sua criatividade é o limite.</p>

<p><strong>H</strong>ave fun! \,,/_</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dica Rápida - Linux - Informações Sobre Arquivos com o Comando stat]]></title>
    <link href="http://blog.marcelocavalcante.net/blog/2013/11/22/dica-rapida-linux-informacoes-sobre-arquivos-com-o-comando-stat/"/>
    <updated>2013-11-22T08:22:00-03:00</updated>
    <id>http://blog.marcelocavalcante.net/blog/2013/11/22/dica-rapida-linux-informacoes-sobre-arquivos-com-o-comando-stat</id>
    <content type="html"><![CDATA[<p><img class="left" src="/imgs/information.png" title="&lsquo;Information&rsquo;" ></p>

<p><strong>Q</strong>ue os sistemas GNU/Linux possuem uma infinidade de comandos todo mundo sabe, o que nem todos conhecem, na verdade, são alguns comandos simples porém eficientes e importantes. Um deles é justamente o <em>stat</em>.</p>

<p><strong>Q</strong>uando se está em frente ao terminal de um servidor que não possui interface gráfica, tudo o que está a nossa disposição são as ferramentas de linha de comando, portanto é bom conhecer uma boa variedade das mesmas, desde ferramentas para tarefas complexas até ferramentas para as atividades mais simples e banais.</p>

<p><strong>A</strong> dica que deixo hoje é uma ferramenta que muitas pessoas desconhecem: <em>stat</em></p>

<p><strong>O</strong> stat serve para apresentar as informações de status de um arquivo ou sistema de arquivos. Ele apresenta uma série de informações sobre o arquivo que você informar como argumento. Dentre as informações estão o <em>Tamanho</em>, <em>Blocos</em>, <em>Permissões de Acesso</em>, <em>Data e Hora de último acesso</em>, <em>Data e Hora de última modificação</em>, etc.</p>

<p><strong>O</strong> uso é simples, bastando digitar: <em>stat &lt;caminho_do_arquivo_ou_sistema_de_arquivos></em>.</p>

<p><code>
 [kalib@tuxcaverna ~]$ stat testdisk.log
  File: “testdisk.log”
  Size: 102478          Blocks: 208        IO Block: 4096   arquivo comum
 Device: 804h/2052d      Inode: 27001862    Links: 1
 Access: (0644/-rw-r--r--)  Uid: ( 1000/   kalib)   Gid: (  100/   users)
 Access: 2013-11-11 11:31:34.360892496 -0300
 Modify: 2011-05-10 09:48:46.000000000 -0300
 Change: 2011-05-11 15:01:29.019407886 -0300
 Birth: -
</code></p>

<p>ou</p>

<p><code>
 [kalib@tuxcaverna ~]$ stat /dev/sda1
  File: “/dev/sda1”
  Size: 0               Blocks: 0          IO Block: 4096   arquivo especial de bloco
 Device: 5h/5d   Inode: 7253        Links: 1     Device type: 8,1
 Access: (0660/brw-rw----)  Uid: (    0/    root)   Gid: (    6/    disk)
 Access: 2013-11-22 08:01:39.246618958 -0300
 Modify: 2013-11-22 08:01:39.246618958 -0300
 Change: 2013-11-22 08:01:39.246618958 -0300
 Birth: -
</code></p>

<p><strong>H</strong>ave fun!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dica Rápida - Linux - Como Não Deixar Rastros no History]]></title>
    <link href="http://blog.marcelocavalcante.net/blog/2013/11/07/dica-rapida-linux-como-nao-deixar-rastros-no-history/"/>
    <updated>2013-11-07T08:16:00-03:00</updated>
    <id>http://blog.marcelocavalcante.net/blog/2013/11/07/dica-rapida-linux-como-nao-deixar-rastros-no-history</id>
    <content type="html"><![CDATA[<p><img class="left" src="/imgs/shhh.jpg" title="&lsquo;Shhhh&rsquo;" ></p>

<p><strong>S</strong>hhhhhhh&hellip;.</p>

<p><strong>Q</strong>ue tal digitar seus comandos em uma máquina Linux sem que os mesmos sejam registrados no <em>history</em> do sistema?</p>

<p><strong>O</strong> history é responsável por armazenar um histórico dos últimos comandos digitados no sistema. Por exemplo:</p>

<p>```
 [kalib@tuxcaverna ~]$ history</p>

<pre><code>1  ls
2  mkdir pc
3  cd pc/
4  ls
5  mkdir pc2
6  ls
7  touch ps2/teste
8  ls
9  touch /
...
...
496  route
497  ifconfig
498  cat teste 
499  ls
500  history
</code></pre>

<p>```</p>

<p><strong>C</strong>omo podemos ver, o history me retornou um histórico dos meus últimos 500 comandos, incluindo o próprio comando <em>history</em>, que acabei de digitar.</p>

<p><strong>V</strong>ejamos o registro de novos comandos:</p>

<p><code>
 [kalib@tuxcaverna ~]$ echo "Teste"
 Teste
 [kalib@tuxcaverna ~]$ echo "Registra isso history"
 Registra isso history
 [kalib@tuxcaverna ~]$ history
 ...
 ...
 501  echo "Teste"
 502  echo "Registra isso history"
 503  history
</code></p>

<p><strong>E</strong>ntão, como não deixar registros no history? Utilizaremos os comandos <em>cat</em> e <em>bash</em> para isto:</p>

<p>```
 [kalib@tuxcaverna ~]$ cat | bash
 pwd
 /home/kalib</p>

<p> df -h
 Sist. Arq.      Tam. Usado Disp. Uso% Montado em
 /dev/sda3        30G   19G  9,3G  67% /
 dev             2,9G     0  2,9G   0% /dev
 run             2,9G  860K  2,9G   1% /run
 tmpfs           2,9G     0  2,9G   0% /dev/shm
 tmpfs           2,9G     0  2,9G   0% /sys/fs/cgroup
 tmpfs           2,9G  108K  2,9G   1% /tmp
 /dev/sda1        99M   23M   69M  25% /boot
 /dev/sda4       427G  305G  101G  76% /home</p>

<p> cd testes</p>

<p> pwd
 /home/kalib/testes
```</p>

<p><strong>S</strong>imples, não?</p>

<p><strong>H</strong>appy hacking&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lynis - Segurança e Auditoria de Sistemas Linux]]></title>
    <link href="http://blog.marcelocavalcante.net/blog/2013/10/30/lynis-seguranca-e-auditoria-de-sistemas-linux/"/>
    <updated>2013-10-30T10:00:00-03:00</updated>
    <id>http://blog.marcelocavalcante.net/blog/2013/10/30/lynis-seguranca-e-auditoria-de-sistemas-linux</id>
    <content type="html"><![CDATA[<p><img class="left" src="/imgs/auditing.jpg" title="&lsquo;Auditando&rsquo;" >
<strong>P</strong>rocurando uma ferramenta de uso simples e rápido que seja capaz de realizar uma auditoria em sistemas Unix like? Talvez o <em>Lynis</em> seja exatamente o que você procura.</p>

<p><strong>O</strong> Lynis é uma ferramenta para (especialistas) Unix com foco em <em>segurança</em> e <em>auditoria</em>, porque não dizer <em>hardening</em>, de sistemas. Ele escaneia o sistema e vários softwares disponíveis no mesmo com o fim de detectar vulnerabilidades. Além de informações relacionadas a segurança, ele também buscará diversas informações sobre o sistema, pacotes instalados e erros de configuração diversos.</p>

<p><strong>E</strong>ste software ainda é útil e utilizado por outros softwares para ajudar em auditorias automatizadas, gerenciamento de patches de sistemas e escaneamento por vulnerabilidades e malwares. O público alvo do mesmo é composto por especialistas em segurança, pentesters, auditores de sistemas, administradores de redes/sistemas, etc.</p>

<p><strong>D</strong>entre suas verificações estão a avaliação dos métodos de autenticação disponíveis, certificados SSL expirados, softwares desatualizados, contas de usuários sem senhas, permissões incorretas em arquivos, erros de configuração, auditoria de firewall, etc.</p>

<p><img class="left" src="/imgs/lynis-screenshot.png" title="&lsquo;Auditando&rsquo;" ></p>

<p><strong>Instalação:</strong></p>

<p><strong>N</strong>o Arch Linux, o pacote se encontra disponível no <a href="https://aur.archlinux.org/packages/lynis/">AUR.</a>, portanto o processo de instalação consiste nos seguintes passos:</p>

<p><strong>1.</strong> Download do <a href="https://aur.archlinux.org/packages/ly/lynis/lynis.tar.gz">Tarball</a> disponibilizado no AUR.
<strong>2.</strong> Descompactação do tarball:
<code>
 $ tar -xvzf lynis.tar.gz
</code>
<strong>3.</strong> Entrar no diretório lynis que foi criado e em seguida iniciar a compilação/criação do pacote em si:
<code>
 $ cd lynis
 $ makepkg
</code>
<strong>4.</strong> Instalação do pacote que foi criado (Apenas este passo com usuário root ou utilizando sudo):
<code>
 # pacman -U lynis-1.3.3-1-any.pkg.tar.xz
</code></p>

<p><strong>C</strong>aso você utilize o yaourt ou algum outro gerenciador de pacotes do Arch Linux que possua acesso direto aos pacotes do AUR, pode utilizá-los ao invés de utilizar os passos acima:</p>

<p><code>
 $ yaourt -S lynis
</code></p>

<p><strong>H</strong>appy Hacking!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BleachBit - Limpeza de Disco no Linux]]></title>
    <link href="http://blog.marcelocavalcante.net/blog/2013/10/23/bleachbit-limpeza-de-disco-no-linux/"/>
    <updated>2013-10-23T09:02:00-03:00</updated>
    <id>http://blog.marcelocavalcante.net/blog/2013/10/23/bleachbit-limpeza-de-disco-no-linux</id>
    <content type="html"><![CDATA[<p><img class="left" src="/imgs/disk-cleanup.jpg" title="&lsquo;Limpeza de Disco&rsquo;" >
<strong>Q</strong>uando o assunto é segurança da informação, muitas vezes o óbvio é deixado de lado. Se pensa em anti-vírus, firewall, IDS (Intrusion Detection System), etc. Mas e o básico e óbvio? Raramente vejo profissionais preocupados com o lixo existente nos discos rígidos. Com <em>lixo</em> eu quero dizer aqueles arquivos temporários, antigos arquivos de cache que já não são necessários, ou mesmo rastros de informações de arquivos que já foram deletados. Sim, o fato de você deletar arquivos não significa que as informações daqueles arquivos foram completamente apagadas do disco. A <em>&ldquo;deleção regular de arquivos&rdquo;</em> não está apagando <em>os dados deletados</em>. Ela está apenas removendo os links dos inodes de arquivos, tornando assim possível a recuperação dos arquivos <em>deletados</em> com algum software forense.</p>

<p><strong>E</strong>xistem várias alternativas para remover seus arquivos de forma segura. As alternativas poderão variar de acordo com o sistema de arquivos utilizado em seu disco, é claro. Uma das formas mais simples que conheço é através da ferramenta <strong>BleachBit</strong>.</p>

<p><strong>B</strong>leachBit é um software livre criado para limpar e liberar espaço em disco, gerenciando assim melhor a sua privacidade e otimizando sistemas computacionais. Criado em 2008 para sistemas GNU/Linux, partiu de um controverso e polêmico debate sobre a necessidade de o GNU/Linux necessitar de uma ferramenta para limpeza de registros. Posteriormente o BleachBit passou a suportar também sistemas Microsoft Windows.</p>

<p><strong>C</strong>om esta ferramenta você poderá não apenas limpar seu espaço em disco, mas também limpar vários arquivos típicos do sistema que não são necessários na maioria dos casos a longo prazo, arquivos estes que podem dar ao intruso informações desnecessárias sobre suas atividades. Não desejamos isto&hellip;</p>

<p><strong>A</strong> instalação do mesmo é feita de forma simples e convencional. No caso do archlinux, o pacote se encontra disponível no repositório [community], portanto pode ser instalado regularmente através do pacman.</p>

<p>```
 [kalib@tuxcaverna ~]$ sudo pacman -Ss bleachbit
 [sudo] password for kalib:
 community/bleachbit 0.9.6-1</p>

<pre><code>Deletes unneeded files to free disk space and maintain privacy
</code></pre>

<p> [kalib@tuxcaverna ~]$ sudo pacman -S bleachbit
```</p>

<p><strong>N</strong>a maioria das distribuições baseadas em Debian, tal como o Ubuntu, o pacote poderá ser instalado através do aptitude ou apt-get:</p>

<p><code>
 $ sudo apt-get update
 $ sudo apt-get install bleachbit
</code></p>

<p><strong>O</strong> BleachBit possui uma interface gráfica simples, na qual você poderá selecionar o que você deseja destruir. Lembre-se que algumas funções são experimentais e podem causar problemas em seu sistema. Mas não há necessidade de se preocupar: O BleachBit lhe informa sobre isto e lhe dá a chance de cancelar a operação selecionada. ;]</p>

<p><strong>O</strong> BleachBit possui uma vasta lista de <em>cleaners</em>, como ele chama as ferramentas internas de limpeza. Dentre a longa lista, podemos citar alguns como: <em>Adanaxis, Adobe Reader, aMSN, aMule, APT, Audacious, Bash, Beagle, Chromium, Downloader for X, Deep scan, Easytag, ELinks, emesene, Epiphany, Evolution, Exaile, Filezilla, Firefox, Flash, gedit, gFTP, GIMP, etc.</em> A lista é realmente longa. <a href="http://bleachbit.sourceforge.net/features">Lista completa de cleaners e demais recursos.</a></p>

<p><strong>P</strong>ara executar o programa, basta procurar o mesmo através do menu de aplicativos de seu sistema, ou através do comando:</p>

<p><code>
 [kalib@tuxcaverna ~]$ bleachbit
</code></p>

<p><strong>H</strong>ave fun!</p>
]]></content>
  </entry>
  
</feed>
