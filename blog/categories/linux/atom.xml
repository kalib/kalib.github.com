<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Marcelo Cavalcante Rocha ~]]></title>
  <link href="http://blog.marcelocavalcante.net/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://blog.marcelocavalcante.net/"/>
  <updated>2013-11-07T09:08:57-03:00</updated>
  <id>http://blog.marcelocavalcante.net/</id>
  <author>
    <name><![CDATA[Marcelo Cavalcante Rocha - Kalib]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Dica Rápida - Linux - Como Não Deixar Rastros no History]]></title>
    <link href="http://blog.marcelocavalcante.net/blog/2013/11/07/dica-rapida-linux-como-nao-deixar-rastros-no-history/"/>
    <updated>2013-11-07T08:16:00-03:00</updated>
    <id>http://blog.marcelocavalcante.net/blog/2013/11/07/dica-rapida-linux-como-nao-deixar-rastros-no-history</id>
    <content type="html"><![CDATA[<p><img class="left" src="/imgs/shhh.jpg" title="&lsquo;Shhhh&rsquo;" ></p>

<p><strong>S</strong>hhhhhhh&hellip;.</p>

<p><strong>Q</strong>ue tal digitar seus comandos em uma máquina Linux sem que os mesmos sejam registrados no <em>history</em> do sistema?</p>

<p><strong>O</strong> history é responsável por armazenar um histórico dos últimos comandos digitados no sistema. Por exemplo:</p>

<p>```
 [kalib@tuxcaverna ~]$ history</p>

<pre><code>1  ls
2  mkdir pc
3  cd pc/
4  ls
5  mkdir pc2
6  ls
7  touch ps2/teste
8  ls
9  touch /
...
...
496  route
497  ifconfig
498  cat teste 
499  ls
500  history
</code></pre>

<p>```</p>

<p><strong>C</strong>omo podemos ver, o history me retornou um histórico dos meus últimos 500 comandos, incluindo o próprio comando <em>history</em>, que acabei de digitar.</p>

<p><strong>V</strong>ejamos o registro de novos comandos:</p>

<p><code>
 [kalib@tuxcaverna ~]$ echo "Teste"
 Teste
 [kalib@tuxcaverna ~]$ echo "Registra isso history"
 Registra isso history
 [kalib@tuxcaverna ~]$ history
 ...
 ...
 501  echo "Teste"
 502  echo "Registra isso history"
 503  history
</code></p>

<p><strong>E</strong>ntão, como não deixar registros no history? Utilizaremos os comandos <em>cat</em> e <em>bash</em> para isto:</p>

<p>```
 [kalib@tuxcaverna ~]$ cat | bash
 pwd
 /home/kalib</p>

<p> df -h
 Sist. Arq.      Tam. Usado Disp. Uso% Montado em
 /dev/sda3        30G   19G  9,3G  67% /
 dev             2,9G     0  2,9G   0% /dev
 run             2,9G  860K  2,9G   1% /run
 tmpfs           2,9G     0  2,9G   0% /dev/shm
 tmpfs           2,9G     0  2,9G   0% /sys/fs/cgroup
 tmpfs           2,9G  108K  2,9G   1% /tmp
 /dev/sda1        99M   23M   69M  25% /boot
 /dev/sda4       427G  305G  101G  76% /home</p>

<p> cd testes</p>

<p> pwd
 /home/kalib/testes
```</p>

<p><strong>S</strong>imples, não?</p>

<p><strong>H</strong>appy hacking&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lynis - Segurança e Auditoria de Sistemas Linux]]></title>
    <link href="http://blog.marcelocavalcante.net/blog/2013/10/30/lynis-seguranca-e-auditoria-de-sistemas-linux/"/>
    <updated>2013-10-30T10:00:00-03:00</updated>
    <id>http://blog.marcelocavalcante.net/blog/2013/10/30/lynis-seguranca-e-auditoria-de-sistemas-linux</id>
    <content type="html"><![CDATA[<p><img class="left" src="/imgs/auditing.jpg" title="&lsquo;Auditando&rsquo;" >
<strong>P</strong>rocurando uma ferramenta de uso simples e rápido que seja capaz de realizar uma auditoria em sistemas Unix like? Talvez o <em>Lynis</em> seja exatamente o que você procura.</p>

<p><strong>O</strong> Lynis é uma ferramenta para (especialistas) Unix com foco em <em>segurança</em> e <em>auditoria</em>, porque não dizer <em>hardening</em>, de sistemas. Ele escaneia o sistema e vários softwares disponíveis no mesmo com o fim de detectar vulnerabilidades. Além de informações relacionadas a segurança, ele também buscará diversas informações sobre o sistema, pacotes instalados e erros de configuração diversos.</p>

<p><strong>E</strong>ste software ainda é útil e utilizado por outros softwares para ajudar em auditorias automatizadas, gerenciamento de patches de sistemas e escaneamento por vulnerabilidades e malwares. O público alvo do mesmo é composto por especialistas em segurança, pentesters, auditores de sistemas, administradores de redes/sistemas, etc.</p>

<p><strong>D</strong>entre suas verificações estão a avaliação dos métodos de autenticação disponíveis, certificados SSL expirados, softwares desatualizados, contas de usuários sem senhas, permissões incorretas em arquivos, erros de configuração, auditoria de firewall, etc.</p>

<p><img class="left" src="/imgs/lynis-screenshot.png" title="&lsquo;Auditando&rsquo;" ></p>

<p><strong>Instalação:</strong></p>

<p><strong>N</strong>o Arch Linux, o pacote se encontra disponível no <a href="https://aur.archlinux.org/packages/lynis/">AUR.</a>, portanto o processo de instalação consiste nos seguintes passos:</p>

<p><strong>1.</strong> Download do <a href="https://aur.archlinux.org/packages/ly/lynis/lynis.tar.gz">Tarball</a> disponibilizado no AUR.
<strong>2.</strong> Descompactação do tarball:
<code>
 $ tar -xvzf lynis.tar.gz
</code>
<strong>3.</strong> Entrar no diretório lynis que foi criado e em seguida iniciar a compilação/criação do pacote em si:
<code>
 $ cd lynis
 $ makepkg
</code>
<strong>4.</strong> Instalação do pacote que foi criado (Apenas este passo com usuário root ou utilizando sudo):
<code>
 # pacman -U lynis-1.3.3-1-any.pkg.tar.xz
</code></p>

<p><strong>C</strong>aso você utilize o yaourt ou algum outro gerenciador de pacotes do Arch Linux que possua acesso direto aos pacotes do AUR, pode utilizá-los ao invés de utilizar os passos acima:</p>

<p><code>
 $ yaourt -S lynis
</code></p>

<p><strong>H</strong>appy Hacking!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BleachBit - Limpeza de Disco no Linux]]></title>
    <link href="http://blog.marcelocavalcante.net/blog/2013/10/23/bleachbit-limpeza-de-disco-no-linux/"/>
    <updated>2013-10-23T09:02:00-03:00</updated>
    <id>http://blog.marcelocavalcante.net/blog/2013/10/23/bleachbit-limpeza-de-disco-no-linux</id>
    <content type="html"><![CDATA[<p><img class="left" src="/imgs/disk-cleanup.jpg" title="&lsquo;Limpeza de Disco&rsquo;" >
<strong>Q</strong>uando o assunto é segurança da informação, muitas vezes o óbvio é deixado de lado. Se pensa em anti-vírus, firewall, IDS (Intrusion Detection System), etc. Mas e o básico e óbvio? Raramente vejo profissionais preocupados com o lixo existente nos discos rígidos. Com <em>lixo</em> eu quero dizer aqueles arquivos temporários, antigos arquivos de cache que já não são necessários, ou mesmo rastros de informações de arquivos que já foram deletados. Sim, o fato de você deletar arquivos não significa que as informações daqueles arquivos foram completamente apagadas do disco. A <em>&ldquo;deleção regular de arquivos&rdquo;</em> não está apagando <em>os dados deletados</em>. Ela está apenas removendo os links dos inodes de arquivos, tornando assim possível a recuperação dos arquivos <em>deletados</em> com algum software forense.</p>

<p><strong>E</strong>xistem várias alternativas para remover seus arquivos de forma segura. As alternativas poderão variar de acordo com o sistema de arquivos utilizado em seu disco, é claro. Uma das formas mais simples que conheço é através da ferramenta <strong>BleachBit</strong>.</p>

<p><strong>B</strong>leachBit é um software livre criado para limpar e liberar espaço em disco, gerenciando assim melhor a sua privacidade e otimizando sistemas computacionais. Criado em 2008 para sistemas GNU/Linux, partiu de um controverso e polêmico debate sobre a necessidade de o GNU/Linux necessitar de uma ferramenta para limpeza de registros. Posteriormente o BleachBit passou a suportar também sistemas Microsoft Windows.</p>

<p><strong>C</strong>om esta ferramenta você poderá não apenas limpar seu espaço em disco, mas também limpar vários arquivos típicos do sistema que não são necessários na maioria dos casos a longo prazo, arquivos estes que podem dar ao intruso informações desnecessárias sobre suas atividades. Não desejamos isto&hellip;</p>

<p><strong>A</strong> instalação do mesmo é feita de forma simples e convencional. No caso do archlinux, o pacote se encontra disponível no repositório [community], portanto pode ser instalado regularmente através do pacman.</p>

<p>```
 [kalib@tuxcaverna ~]$ sudo pacman -Ss bleachbit
 [sudo] password for kalib:
 community/bleachbit 0.9.6-1</p>

<pre><code>Deletes unneeded files to free disk space and maintain privacy
</code></pre>

<p> [kalib@tuxcaverna ~]$ sudo pacman -S bleachbit
```</p>

<p><strong>N</strong>a maioria das distribuições baseadas em Debian, tal como o Ubuntu, o pacote poderá ser instalado através do aptitude ou apt-get:</p>

<p><code>
 $ sudo apt-get update
 $ sudo apt-get install bleachbit
</code></p>

<p><strong>O</strong> BleachBit possui uma interface gráfica simples, na qual você poderá selecionar o que você deseja destruir. Lembre-se que algumas funções são experimentais e podem causar problemas em seu sistema. Mas não há necessidade de se preocupar: O BleachBit lhe informa sobre isto e lhe dá a chance de cancelar a operação selecionada. ;]</p>

<p><strong>O</strong> BleachBit possui uma vasta lista de <em>cleaners</em>, como ele chama as ferramentas internas de limpeza. Dentre a longa lista, podemos citar alguns como: <em>Adanaxis, Adobe Reader, aMSN, aMule, APT, Audacious, Bash, Beagle, Chromium, Downloader for X, Deep scan, Easytag, ELinks, emesene, Epiphany, Evolution, Exaile, Filezilla, Firefox, Flash, gedit, gFTP, GIMP, etc.</em> A lista é realmente longa. <a href="http://bleachbit.sourceforge.net/features">Lista completa de cleaners e demais recursos.</a></p>

<p><strong>P</strong>ara executar o programa, basta procurar o mesmo através do menu de aplicativos de seu sistema, ou através do comando:</p>

<p><code>
 [kalib@tuxcaverna ~]$ bleachbit
</code></p>

<p><strong>H</strong>ave fun!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dica Rápida - Linux - Como Limpar o Conteúdo de um Arquivo Texto Sem Abrir o Mesmo]]></title>
    <link href="http://blog.marcelocavalcante.net/blog/2013/09/11/dica-rapida-linux-como-limpar-o-conteudo-de-um-arquivo-texto-sem-abrir-o-mesmo/"/>
    <updated>2013-09-11T11:05:00-03:00</updated>
    <id>http://blog.marcelocavalcante.net/blog/2013/09/11/dica-rapida-linux-como-limpar-o-conteudo-de-um-arquivo-texto-sem-abrir-o-mesmo</id>
    <content type="html"><![CDATA[<p><img class="left" src="/imgs/erase.jpg" title="&lsquo;Erasing text&rsquo;" >
<strong>A</strong>rquivos de log, por vezes, podem ser muito extensos. Tão extensos que torna-se praticamente impossível a leitura de seu conteúdo com um editor de textos como o vim ou vi. Além disso, muitos deles podem chegar a ocupar Gigas e mais Gigas de seu espaço em disco, o que pode acabar sendo um desperdício de espaço em seu sistema de arquivos.</p>

<p><strong>H</strong>oje passei por um problema deste tipo. Ao atualizar meu Arch Linux, percebi que comecei a receber erros devido ao meu espaço em disco o qual era apontado como &ldquo;insuficiente&rdquo;. O fato é que é muito comum em distribuições Linux utilizarmos um particionamento de forma a isolarmos um pouco cada partição para fins específicos. No meu caso, verifiquei que a minha partição raíz estava mesmo completamente cheia.</p>

<p><code>
 [kalib@tuxcaverna ~]$ df -h /
 Sist. Arq.      Tam. Usado Disp. Uso% Montado em
 /dev/sda3        30G   30G   0M  100% /
</code></p>

<p><strong>P</strong>ara resolver meu problema comecei limpando os pacotes que ficam em cache desnecessariamente através do pacman:</p>

<p><code>
 [kalib@tuxcaverna ~]$ pacman -Sc
</code></p>

<p><strong>E</strong>m seguida resolvi verificar quanto de espaço eu estava consumindo com logs de sistema:</p>

<p><code>
 [root@tuxcaverna ~]# cd /var/log
 [root@tuxcaverna ~]# du -h .
</code></p>

<p><strong>O</strong> comando acima me mostrou que meu diretório de logs estava consumindo mais de 13G. Insano, certo? Na verdade, não. É comum que ao longo dos meses, ou mesmo anos, o sistema acumule logs e mais logs. Uma quantia absurda e, muitas vezes, desnecessária de informações. Como trata-se de meu notebook pessoal e não estou tendo qualquer erro em meu sistema, resolvi limpar estes logs, portanto o primeiro passo é identificar os maiores arquivos. No meu caso foram os arquivos:</p>

<p><code>
 everything.log    kernel.log    daemon.log
</code></p>

<p><strong>U</strong>ma vez que cada um destes arquivos possuía mais de 3G, resolvi limpá-los completamente. A saída mais rápida e KISS? <em>/dev/null neles</em>.</p>

<p><code>
 [root@tuxcaverna ~]# cat /dev/null &gt;everything.log
</code></p>

<p><strong>I</strong>sto limpará completamente o conteúdo do arquivo de texto informado. Vejamos o simples exemplo a seguir:</p>

<p><strong>V</strong>amos criar um arquivo de texto vazio chamado <em>teste.txt</em>.</p>

<p><code>
 [root@tuxcaverna ~]# touch teste.txt
</code></p>

<p><strong>E</strong>m seguida, vamos inserir algum conteúdo no mesmo:</p>

<p><code>
 [root@tuxcaverna ~]# echo "Testando" &gt;teste.txt
</code></p>

<p><strong>V</strong>erifiquemos se meu texto realmente foi inserido no arquivo:</p>

<p><code>
 [root@tuxcaverna ~]# cat teste.txt
 Testando
</code></p>

<p><strong>T</strong>udo certo. Agora vamos limpar o mesmo:</p>

<p><code>
 [root@tuxcaverna ~]# cat /dev/null &gt;teste.txt
</code></p>

<p><strong>A</strong>gora, vamos confirmar se o mesmo foi mesmo zerado:</p>

<p><code>
 [root@tuxcaverna ~]# cat teste.txt
 [root@tuxcaverna ~]#
</code></p>

<p><strong>M</strong>issão cumprida. Apenas para constar a diferença:</p>

<p><code>
 [kalib@tuxcaverna ~]$ df -h /
 Sist. Arq.      Tam. Usado Disp. Uso% Montado em
 /dev/sda3        30G   16G   13G  56% /
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Correção do Bug entre Kernel Linux e Placas Broadcom]]></title>
    <link href="http://blog.marcelocavalcante.net/blog/2013/09/03/correcao-do-bug-entre-kernel-linux-e-placas-broadcom/"/>
    <updated>2013-09-03T20:33:00-03:00</updated>
    <id>http://blog.marcelocavalcante.net/blog/2013/09/03/correcao-do-bug-entre-kernel-linux-e-placas-broadcom</id>
    <content type="html"><![CDATA[<p><img class="left" src="/imgs/catchbug.jpg" title="&lsquo;Catching Big&rsquo;" >
<strong>B</strong>ug capturado e tratado!</p>

<p><strong>D</strong>iversas pessoas se depararam com intermináveis erros de <em>kernel panic</em> após atualizar seu kernel para a versão <em>3.10.6</em> (e posteriores) quando utilizavam placas wireless da <em>Broadcom</em>. O erro reportado foi tratado e, apesar de ainda não estar resolvido no último kernel lançado, <em>3.10.10</em>, já se encontra na árvore de <em>Linus Torvalds</em>, conforme código e correção podem ser vistos através do seguinte link:</p>

<p><a href="https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=2dfca312a91631311c1cf7c090246cc8103de038">mac80211: add a flag to indicate CCK support for HT clients</a></p>

<p><strong>O</strong> problema se dava com o módulo brcm80211 que não conseguia lidar adequadamente com o envio de frames com taxas CCK como parte de uma sessão A-MPDU. Apesar de outros drivers/módulos da broadcom conseguirem conectar-se sem o kernel panic logo na inicialização do sistema, estes ainda podem enfrentar problemas em outros momentos sem esta correção. O patch corrige o erro reportado com módulos brcmsmac bem como outros.</p>

<p><strong>A</strong>tualmente estou utilizando o último kernel disponibilizado, o <em>3.10.10</em>. Apesar de a correção ainda não ter saído nesta versão, estou utilizando uma versão do kernel com o patch já aplicado.</p>

<p><strong>E</strong>speremos pelo kernel <em>3.11</em> que deverá ser lançado nos próximos dias e que, por sua vez, deverá resolver este problema definitivamente.</p>
]]></content>
  </entry>
  
</feed>
